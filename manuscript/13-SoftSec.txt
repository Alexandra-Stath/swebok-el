# Ασφάλεια λογισμικού {#softsec}


## Ακρωνύμια

|CC  |Common Criteria              |
|SDLC|Secure development life cycle|

## Εισαγωγή

Η ασφάλεια έχει εξελιχθεί σε καθοριστικό παράγοντα στην ανάπτυξη λογισμικού εξαιτίας της διαρκώς αυξανόμενης κακόβουλης δραστηριότητας, 
η οποία στοχοποιεί τα υπολογιστικά συστήματα. Επιπλέον των συνήθων ζητημάτων  ορθότητας και αξιοπιστίας, οι προγραμματιστές
οφείλουν να επιδεικνύουν ιδιαίτερη προσοχή στην ασφάλεια του λογισμικού το οποίο αναπτύσσουν. 
Η ασφαλής διαδικασία ανάπτυξης λογισμικού επιτυγχάνει την ασφάλεια μέσω της εφαρμογής ενός συνόλου καθιερωμένων ή/και προτεινόμενων κανόνων και πρακτικών.
Στο ίδιο πλαίσιο, η ασφαλής διαδικασία συντήρησης λογισμικού συμπληρώνει την ασφαλή ανάπτυξη, εξασφαλίζοντας την αποφυγή εισαγωγής ζητημάτων ασφαλείας 
κατά την διάρκεια της διαδικασίας συντήρησης.

## Κατανομή των θεμάτων για την ασφάλεια λογισμικού

{id="fig-TODO"}
![Σχήμα TODO.1 Κατανομή των θεμάτων στο γνωστικό πεδίο ασφάλειας λογισμικού.](images/TODO-TODO.png)

Η κατανομή των θεμάτων για το γνωστικό πεδίο ασφάλειας λογισμικού
απεικονίζεται στο [Σχήμα TODO.1](#fig-TODO).

## Βασικές αρχές ασφάλειας λογισμικού

Γενικά αποδεκτή ιδέα αναφορικά με την ασφάλεια λογισμικού συνιστά η αντίληψη ότι είναι συγκριτικά αποτελεσματικότερη η εξαρχής σχεδίαση της ασφάλειας
στο λογισμικό από ό,τι η ενσωμάτωση αυτής κατόπιν της ανάπτυξης του λογισμικού. Για την σχεδίαση της ασφάλειας στο λογισμικό κρίνεται απαραίτητο 
να ληφθεί υπόψη καθένα από τα στάδια του κύκλου ζωής ανάπτυξης. Η ασφαλής ανάπτυξη λογισμικού περιλαμβάνει την ασφάλεια των απαιτήσεων,
του σχεδιασμού, της κατασκευής και του ελέγχου λογισμικού. Επιπλέον, το θέμα της ασφάλειας πρέπει να ληφθεί υπόψη και κατά την διάρκεια της συντήρησης
του λογισμικού, καθώς είναι πιθανή σε αυτό το στάδιο και συχνά συμβαίνει, η δημιουργία προβλημάτων ασφαλείας και περιπτώσεων ευπάθειας.

### Ασφάλεια λογισμικού

Η ασφάλεια συνιστά χαρακτηριστικό ποιότητας ενός προϊόντος, εκφράζοντας τον βαθμό στον οποίο ένα προϊόν ή σύστημα προστατεύει πληροφορίες 
και δεδομένα έτσι ώστε άτομα, άλλα συστήματα ή προϊόντα να έχουν πρόσβαση σε αυτά, ανάλογη των τύπων και του επιπέδου εξουσιοδότησής τους
(βλ. παράγραφο Ποιότητα λογισμικού).

### Ασφάλεια πληροφοριών

Η ασφάλεια πληροφοριών διαφυλάσσει την εμπιστευτικότητα, ακεραιότητα και διαθεσιμότητα των πληροφοριών. 
Άλλα στοιχεία, όπως η αυθεντικότητα, υπευθυνότητα, μη-απόρριψη και αξιοπιστία ενδέχεται επίσης να εμπλέκονται.
Η εμπιστευτικότητα συνιστά την ιδιότητα εξασφάλισης μη αποκάλυψης των πληροφοριών σε μη εξουσιοδοτημένα άτομα, οντότητες ή διαδικασίες.
Η ακεραιότητα ορίζεται ως η ιδιότητα ακρίβειας και πληρότητας. Τέλος, η διαθεσιμότητα αποτελεί το στοιχείο της προσβασιμότητας και ικανότητας χρήσης,
όποτε ζητηθεί, από εξουσιοδοτημένη οντότητα. Οι προγραμματιστές λογισμικού πρέπει να ορίζουν τις ιδιότητες ασφαλείας του λογισμικού τους και
να τις συντηρούν καθόλη την διάρκεια της διαδικασίας ανάπτυξης. 

### Κυβερνοασφάλεια

Η κυβερνοασφάλεια σχετίζεται με θέματα ασφάλειας στον κυβερνοχώρο, συμπεριλαμβανομένων των παρακάτω:

    *Επιθέσεις κοινωνικής μηχανικής
    *Hacking
    *Διάδοση κακόβουλου λογισμικού (malware)
    *Spyware
    *Άλλο δυνητικά ανεπιθύμητο λογισμικό 

Οι προγραμματιστές λογισμικού οφείλουν να θεωρούν την μετρίαση τέτοιων κινδύνων ως μέρος της διαδικασίας ανάπτυξης λογισμικού. 

## Διαχείριση και οργάνωση της ασφάλειας

Η διαχείριση της ασφάλειας κρίνεται αποτελεσματικότερη όταν πραγματοποιείται συστηματικά, με άλλα λόγια, όταν είναι ενσωματωμένη στην οργανωσιακή κουλτούρα,
σε συμπεριφορές και δράσεις. Οι υπεύθυνοι έργου χρειάζεται να αναδείξουν την ασφάλεια λογισμικού από ξεχωριστό τεχνικό ζήτημα σε θέμα που αφορά ολόκληρη
την επιχείρηση. 

### Μοντέλο ωριμότητας ικανότητας

Πολλοί οργανισμοί εφαρμόζουν μηχανική ασφάλειας κατά τη διάρκεια της ανάπτυξης προγραμμάτων υπολογιστών, συμπεριλαμβανομένων των λειτουργικών συστημάτων,
λειτουργιών που διαχειρίζονται και εφαρμόζουν την ασφάλεια, πακέτων προϊόντων λογισμικού, ενδιάμεσου λογισμικού και εφαρμογών. Ως αποτέλεσμα, 
ένα ευρύ πλήθος ατόμων, συμπεριλαμβανομένων  σχεδιαστών προϊόντων, παρόχων υπηρεσιών, ολοκληρωτών και διαχειριστών συστημάτων και ειδικών σε θέματα ασφαλείας,
πρέπει  να γνωρίζουν πώς να εφαρμόζουν τις κατάλληλες μεθόδους και πρακτικές ασφάλειας. Η μηχανική ασφάλειας συστημάτων και πιο συγκεκριμένα το 
μοντέλο ωριμότητας ικανότητας (SSE-CMM), το οποίο συμβάλλει στην μέτρηση της ικανότητας επεξεργασίας ενός οργανισμού που εκτελεί εκτιμήσεις κινδύνου,
 μπορεί να θεωρηθεί πολύτιμο εργαλείο.

### Συστήματα διαχείρισης ασφάλειας πληροφοριών

Ο Διεθνής Οργανισμός Τυποποίησης/Η Διεθνής Ηλεκτροτεχνική Επιτροπή (ISO/IEC) 27001:2013 ορίζει τις απαιτήσεις δημιουργίας, εφαρμογής,
συντήρησης και συνεχούς βελτίωσης ενός συστήματος διαχείρισης της ασφάλειας λογισμικού (ISMS) εντός του οργανωσιακού πλαισίου. 
Λογισμικό το οποίο αποτελεί μέρος ISMS εντός ενός οργανισμού, είναι συμβατό με την πολιτική ασφάλειας. Με άλλα λόγια, μέρος των ιδιοτήτων της
ασφάλειας λογισμικού προέρχεται από την πολιτική για τα ISMS.

### Ευέλικτη μεθοδολογία στην ασφάλεια λογισμικού

Οι Ευέλικτες ομάδες (Agile teams) οφείλουν να κατανοούν και να υιοθετούν κατάλληλες πρακτικές και να αναλαμβάνουν μεγαλύτερη ευθύνη για την ασφάλεια
των συστημάτων τους. Οι ειδικοί σε θέματα ασφάλειας οφείλουν να μάθουν να αποδέχονται την αλλαγή, να εργάζονται ταχύτερα και να σκέφτονται τους
κινδύνους ασφάλειας, όπως και τους τρόπους διαχείρισής τους σταδιακά. Τελευταίο και πιο σημαντικό, η ασφάλεια χρειάζεται να μετατραπεί σε υποκινητή
αντί για παρεμποδιστή. Τα κλειδιά για ένα επιτυχημένο Ευέλικτο πρόγραμμα ασφάλειας είναι η συμμετοχή της ομάδας ασφαλείας και των προγραμματιστών, 
η ενεργοποίηση (enablement), ο αυτοματισμός (automation) και η ευελιξία (agility), ώστε να υπάρχει παράλληλη δράση με την Ευέλικτη ομάδα.

## Μηχανική ασφάλειας λογισμικού και διαδικασιών

### Μηχανική ασφάλειας και ασφαλής κύκλος ζωής ανάπτυξης (SDLC) 

Το λογισμικό θεωρείται τόσο ασφαλές, όσο και η διαδικασία ανάπτυξής του. Η ασφάλεια πρέπει να ενσωματωθεί στη μηχανική λογισμικού ώστε να εξασφαλιστεί
η ύπαρξή της στο λογισμικό. Η έννοια του SDLC συνιστά τάση, η οποία επιχειρεί να πραγματοποιήσει το παραπάνω. Το SDLC χρησιμοποιεί ένα κλασσικό
σπειροειδές μοντέλο, το οποίο αντιλαμβάνεται ολιστικά την ασφάλεια από την οπτική του κύκλου ζωής λογισμικού και εξασφαλίζει ότι αυτή είναι έμφυτη
στον σχεδιασμό και την ανάπτυξή του και δεν αποτελεί μεταγενέστερη σκέψη, στο στάδιο της παραγωγής. Η διαδικασία του SDLC υποστηρίζεται ότι μειώνει τα κόστη
συντήρησης και αυξάνει την αξιοπιστία του λογισμικού απέναντι  σε σφάλματα σχετιζόμενα με την ασφάλεια.

Προσφάτως, παρατηρήθηκε η εμφάνιση του DevSecOps (εννοώντας την ολοκλήρωση της διαδικασίας ανάπτυξης, της ασφάλειας και των λειτουργιών). Επιπλέον του SDLC ,
το DevSecOps περιλαμβάνει μια προσέγγιση  για την κουλτούρα, αυτοματοποίηση και σχεδιασμό πλατφορμών  ώστε να καθιστά τον κύκλο ζωής του λογισμικού τόσο
Ευέλικτο και υπεύθυνο όσο η Ευέλικτη ανάπτυξη και η συνεχής ολοκλήρωση (CI).

### Συνήθη κριτήρια για την αξιολόγηση της ασφάλειας της τεχνολογίας πληροφοριών

Η αξιολόγηση της ασφάλειας δημιουργεί αίσθημα εμπιστοσύνης στην λειτουργικότητα ασφάλειας των προϊόντων  πληροφορικής και στα μέτρα διασφάλισης,
τα οποία εφαρμόζονται σε αυτά. Τα αποτελέσματα της αξιολόγησης ενδέχεται να βοηθούν τους καταναλωτές να καθορίζουν αν κάποια προϊόντα πληροφορικής
καλύπτουν τις ανάγκες τους για ασφάλεια. Το ISO/IEC 15408, ονομαζόμενο Συνήθη Κριτήρια (CC Common Criteria) για την Αξιολόγηση της Ασφάλειας της 
Τεχνολογίας Πληροφορίας, αποτελεί χρήσιμο οδηγό για την ανάπτυξη, αξιολόγηση ή/και προμήθεια προϊόντων πληροφορικής με λειτουργικότητα ασφάλειας.  


Τα Συνήθη Κριτήρια (CC) αφορούν την προστασία των στοιχείων από μη εξουσιοδοτημένη γνωστοποίηση, τροποποίηση ή απώλεια χρήσης. Οι κατηγορίες προστασίας,
οι οποίες σχετίζονται με τους τρεις προαναφερόμενους τύπους αποτυχίας ασφαλείας, ονομάζονται συνήθως και αντιστοίχως, εμπιστευτικότητα, ακεραιότητα και 
διαθεσιμότητα.

## Μηχανική ασφάλειας για συστήματα λογισμικού

### Απαιτήσεις ασφάλειας

Η ασφάλεια των απαιτήσεων λογισμικού έχει ως αντικείμενο την διευκρίνιση και συγκεκριμενοποίηση της πολιτικής ασφάλειας και των στόχων στις απαιτήσεις λογισμικού,
θέτοντας με αυτό τον τρόπο τα θεμέλια για ζητήματα ασφάλειας κατά την διαδικασία της ανάπτυξης λογισμικού. Παράγοντες οι οποίοι πρέπει να ληφθούν υπόψη σε αυτό
το στάδιο είναι οι απαιτήσεις λογισμικού και οι απειλές ή κίνδυνοι. Οι απαιτήσεις αναφέρονται στις συγκεκριμένες λειτουργίες που είναι κρίσιμες για την ασφάλεια
ενώ οι κίνδυνοι στους πιθανούς τρόπους, με τους οποίους ενδέχεται να τεθεί υπό απειλή η ασφάλεια του λογισμικού.

### Σχεδιασμός ασφάλειας

Ο σχεδιασμός ασφάλειας αναφέρεται στους τρόπους αποφυγής μη εξουσιοδοτημένης γνωστοποίησης, δημιουργίας, αλλαγής, διαγραφής ή άρνησης πρόσβασης σε
πληροφορίες και άλλους πόρους. Επιπλέον, σχετίζεται με μεθόδους αντοχής σε επιθέσεις και παραβιάσεις οι οποίες αφορούν την ασφάλεια, περιορίζοντας την ζημιά,
συνεχίζοντας την προσφορά υπηρεσίας, επιταχύνοντας την επιδιόρθωση και ανάκτηση και εξασφαλίζοντας την ανάκαμψη με ασφάλεια μετά την αποτυχία.
Ο έλεγχος πρόσβασης συνιστά θεμελιώδη έννοια της ασφάλειας, ενώ σημαίνοντα ρόλο διαδραματίζει η εξασφάλιση της σωστής χρήσης της κρυπτολογίας.

Η ασφάλεια του σχεδιασμού λογισμικού ασχολείται με τον σχεδιασμό τμημάτων λογισμικού, τα οποία συνδέονται μεταξύ τους ώστε να συμβαδίζουν 
με τους στόχους που καθορίζονται από τις απαιτήσεις ασφάλειας. Το συγκεκριμένο βήμα διασαφηνίζει τις λεπτομέρειες των ζητημάτων ασφάλειας και
διαμορφώνει διακριτά βήματα για την εκτέλεση. Παράγοντες που πρέπει να ληφθούν υπόψη ενδέχεται να  περιλαμβάνουν πλαίσια και τρόπους πρόσβασης, 
τα οποία ορίζουν τις συνολικές στρατηγικές παρακολούθησης/εφαρμογής, όπως και επιμέρους μηχανισμούς εφαρμογής πολιτικών. 

## Πρότυπα ασφάλειας

Ένα πρότυπο ασφάλειας περιγράφει ένα συγκεκριμένο επαναλαμβανόμενο πρόβλημα ασφάλειας, το οποίο προκύπτει εντός συγκεκριμένου πλαισίου και επιδέχεται
καλά αποδεδειγμένη γενική λύση.
